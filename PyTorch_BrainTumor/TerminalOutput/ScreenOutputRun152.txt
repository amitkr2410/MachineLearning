/content/drive/MyDrive/PyTorch_BrainTumor/params.yaml


######### Start initializing parameters ##### 
dict_keys(['parent_dir', 'model_name', 'num_classes', 'seed', 'test_size', 'train_folder', 'test_folder', 'predict_folder', 'learning_rate', 'weight_decay', 'batch_size', 'num_epochs', 'save_model_flag', 'save_model_dir', 'save_model_filename', 'save_parameters_file', 'train_accuracy', 'test_val_loss', 'test_accuracy'])
dict_values([PosixPath('.'), 'cnn_4layers_custom', 2, 1, 0.2, PosixPath('data/train'), PosixPath('data/test'), PosixPath('data/predict'), 0.002, 0.2, 100, 2, 'yes', 'final_model', 'cnn_4layers_custom.pth', 'cnn_4layers_results', 0.0, 0.0, 0.0])
model_name
save_model_filename
save_parameters_file
seed
test_size
learning_rate
weight_decay
num_epochs
batch_size
Parent_DIR is =  /content/drive/MyDrive/PyTorch_BrainTumor
dict_values([PosixPath('/content/drive/MyDrive/PyTorch_BrainTumor'), 'only_attention', 2, 4, 0.2, PosixPath('/content/drive/MyDrive/PyTorch_BrainTumor/data/train'), PosixPath('/content/drive/MyDrive/PyTorch_BrainTumor/data/test'), PosixPath('/content/drive/MyDrive/PyTorch_BrainTumor/data/predict'), 0.001, 0.002, 50, 20, 'yes', 'final_model', '/content/drive/MyDrive/PyTorch_BrainTumor/final_model/only_attention_Run152.pth', 'only_attention_Run152', 0.0, 0.0, 0.0])
######### Done initializing parameters ##### 


######### Start data download step ##### 
######### End of the data download step ##### 
######### Start of data loader creation step ##### 
######### End of data loader creation step ##### 
######### Start of training step ##### 
Device is  cuda
 You have called model with basic vision transformer: 
basic_vision_transformer(
  (adaptivepool): AdaptiveAvgPool2d(output_size=(200, 200))
  (patch_embedding_layer): Linear(in_features=300, out_features=512, bias=True)
  (sa): SelfAttention(
    (W_q): Linear(in_features=512, out_features=512, bias=True)
    (W_k): Linear(in_features=512, out_features=512, bias=True)
    (W_v): Linear(in_features=512, out_features=512, bias=True)
    (W_o): Linear(in_features=512, out_features=512, bias=True)
  )
  (fc): Sequential(
    (0): Linear(in_features=204800, out_features=2, bias=True)
  )
)
Size of train_loader= 48
End of epoch:  0 / 20 , training accuracy= 0.63  , val loss= 0.010653305153052012  , val accuracy= 0.7199999999999999
End of epoch:  1 / 20 , training accuracy= 0.7908333333333332  , val loss= 0.008132094119985897  , val accuracy= 0.8316666666666667
End of epoch:  2 / 20 , training accuracy= 0.8433333333333337  , val loss= 0.006362969502806665  , val accuracy= 0.8666666666666667
End of epoch:  3 / 20 , training accuracy= 0.8616666666666667  , val loss= 0.005538373266657193  , val accuracy= 0.8700000000000001
End of epoch:  4 / 20 , training accuracy= 0.8662500000000003  , val loss= 0.008196452533205351  , val accuracy= 0.8283333333333335
End of epoch:  5 / 20 , training accuracy= 0.8495833333333335  , val loss= 0.0064348479857047405  , val accuracy= 0.86
End of epoch:  6 / 20 , training accuracy= 0.8766666666666669  , val loss= 0.003976322971284389  , val accuracy= 0.9133333333333332
End of epoch:  7 / 20 , training accuracy= 0.8779166666666668  , val loss= 0.0051516306400299075  , val accuracy= 0.9016666666666668
End of epoch:  8 / 20 , training accuracy= 0.8795833333333337  , val loss= 0.006756714433431624  , val accuracy= 0.8850000000000001
End of epoch:  9 / 20 , training accuracy= 0.8708333333333335  , val loss= 0.006253602777918181  , val accuracy= 0.8816666666666668
End of epoch:  10 / 20 , training accuracy= 0.8462500000000001  , val loss= 0.007874556183815003  , val accuracy= 0.8616666666666668
End of epoch:  11 / 20 , training accuracy= 0.8525000000000004  , val loss= 0.007182982141772908  , val accuracy= 0.8799999999999999
End of epoch:  12 / 20 , training accuracy= 0.8837500000000004  , val loss= 0.005577833528319995  , val accuracy= 0.8933333333333332
End of epoch:  13 / 20 , training accuracy= 0.8662500000000001  , val loss= 0.012740029493967691  , val accuracy= 0.8066666666666668
End of epoch:  14 / 20 , training accuracy= 0.8170833333333336  , val loss= 0.013223772669831914  , val accuracy= 0.8450000000000002
End of epoch:  15 / 20 , training accuracy= 0.8045833333333334  , val loss= 0.02683287968238195  , val accuracy= 0.8116666666666669
End of epoch:  16 / 20 , training accuracy= 0.8204166666666669  , val loss= 0.01733621766169866  , val accuracy= 0.8300000000000002
End of epoch:  17 / 20 , training accuracy= 0.8304166666666669  , val loss= 0.015049986417094869  , val accuracy= 0.8350000000000001
End of epoch:  18 / 20 , training accuracy= 0.8195833333333334  , val loss= 0.01581290086110433  , val accuracy= 0.8316666666666669
End of epoch:  19 / 20 , training accuracy= 0.8033333333333336  , val loss= 0.02917757680018743  , val accuracy= 0.7333333333333334
: The validation loss =  0.029177577992280324 , accuracy= 0.7333333333333333
Saving the model into the file: /content/drive/MyDrive/PyTorch_BrainTumor/final_model/only_attention_Run152.pth
######### End of training step ##### 
Amit: parent_dir
parent_dir : /content/drive/MyDrive/PyTorch_BrainTumor

model_name : only_attention

num_classes : 2

seed : 4

test_size : 0.2

train_folder : /content/drive/MyDrive/PyTorch_BrainTumor/data/train

test_folder : /content/drive/MyDrive/PyTorch_BrainTumor/data/test

predict_folder : /content/drive/MyDrive/PyTorch_BrainTumor/data/predict

learning_rate : 0.001

weight_decay : 0.002

batch_size : 50

num_epochs : 20

save_model_flag : yes

save_model_dir : final_model

save_model_filename : /content/drive/MyDrive/PyTorch_BrainTumor/final_model/only_attention_Run152.pth

save_parameters_file : only_attention_Run152

train_accuracy : 0.8033333333333336

test_val_loss : 0.029177577992280324

test_accuracy : 0.7333333333333333
