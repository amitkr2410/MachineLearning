/content/drive/MyDrive/PyTorch_BrainTumor/params.yaml


######### Start initializing parameters ##### 
dict_keys(['parent_dir', 'model_name', 'num_classes', 'seed', 'test_size', 'train_folder', 'test_folder', 'predict_folder', 'learning_rate', 'weight_decay', 'batch_size', 'num_epochs', 'save_model_flag', 'save_model_dir', 'save_model_filename', 'save_parameters_file', 'train_accuracy', 'test_val_loss', 'test_accuracy'])
dict_values([PosixPath('.'), 'cnn_4layers_custom', 2, 1, 0.2, PosixPath('data/train'), PosixPath('data/test'), PosixPath('data/predict'), 0.002, 0.2, 100, 2, 'yes', 'final_model', 'cnn_4layers_custom.pth', 'cnn_4layers_results', 0.0, 0.0, 0.0])
model_name
save_model_filename
save_parameters_file
seed
test_size
learning_rate
weight_decay
num_epochs
batch_size
Parent_DIR is =  /content/drive/MyDrive/PyTorch_BrainTumor
dict_values([PosixPath('/content/drive/MyDrive/PyTorch_BrainTumor'), 'cnn_4layers_custom', 2, 4, 0.2, PosixPath('/content/drive/MyDrive/PyTorch_BrainTumor/data/train'), PosixPath('/content/drive/MyDrive/PyTorch_BrainTumor/data/test'), PosixPath('/content/drive/MyDrive/PyTorch_BrainTumor/data/predict'), 0.0001, 0.0002, 50, 20, 'yes', 'final_model', '/content/drive/MyDrive/PyTorch_BrainTumor/final_model/cnn_4layers_results_Run22.pth', 'cnn_4layers_results_Run22', 0.0, 0.0, 0.0])
######### Done initializing parameters ##### 


######### Start data download step ##### 
######### End of the data download step ##### 
######### Start of data loader creation step ##### 
######### End of data loader creation step ##### 
######### Start of training step ##### 
Device is  cuda
cnn_4layers_custom(
  (layer1): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
  )
  (layer2): Sequential(
    (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (layer3): Sequential(
    (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
  )
  (layer4): Sequential(
    (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (adaptivepool): AdaptiveAvgPool2d(output_size=(7, 7))
  (fc1): Sequential(
    (0): Linear(in_features=6272, out_features=896, bias=True)
    (1): ReLU()
    (2): Dropout(p=0.5, inplace=False)
  )
  (fc2): Sequential(
    (0): Linear(in_features=896, out_features=2, bias=True)
  )
)
Size of train_loader= 48
End of epoch:  0 / 20 , training accuracy= 0.7274999999999999
End of epoch:  1 / 20 , training accuracy= 0.7879166666666667
End of epoch:  2 / 20 , training accuracy= 0.8162499999999998
End of epoch:  3 / 20 , training accuracy= 0.8341666666666666
End of epoch:  4 / 20 , training accuracy= 0.8562500000000002
End of epoch:  5 / 20 , training accuracy= 0.8608333333333337
End of epoch:  6 / 20 , training accuracy= 0.8783333333333335
End of epoch:  7 / 20 , training accuracy= 0.8850000000000001
End of epoch:  8 / 20 , training accuracy= 0.8883333333333332
End of epoch:  9 / 20 , training accuracy= 0.8912500000000002
End of epoch:  10 / 20 , training accuracy= 0.9091666666666668
End of epoch:  11 / 20 , training accuracy= 0.9187500000000003
End of epoch:  12 / 20 , training accuracy= 0.9141666666666671
End of epoch:  13 / 20 , training accuracy= 0.9120833333333334
End of epoch:  14 / 20 , training accuracy= 0.9383333333333335
End of epoch:  15 / 20 , training accuracy= 0.9400000000000001
End of epoch:  16 / 20 , training accuracy= 0.9445833333333332
End of epoch:  17 / 20 , training accuracy= 0.9391666666666668
End of epoch:  18 / 20 , training accuracy= 0.9454166666666666
End of epoch:  19 / 20 , training accuracy= 0.9399999999999998
: The validation loss =  0.0035088140144944185 , accuracy= 0.9449999999999997
Saving the model into the file: /content/drive/MyDrive/PyTorch_BrainTumor/final_model/cnn_4layers_results_Run22.pth
######### End of training step ##### 
Amit: parent_dir
parent_dir : /content/drive/MyDrive/PyTorch_BrainTumor

model_name : cnn_4layers_custom

num_classes : 2

seed : 4

test_size : 0.2

train_folder : /content/drive/MyDrive/PyTorch_BrainTumor/data/train

test_folder : /content/drive/MyDrive/PyTorch_BrainTumor/data/test

predict_folder : /content/drive/MyDrive/PyTorch_BrainTumor/data/predict

learning_rate : 0.0001

weight_decay : 0.0002

batch_size : 50

num_epochs : 20

save_model_flag : yes

save_model_dir : final_model

save_model_filename : /content/drive/MyDrive/PyTorch_BrainTumor/final_model/cnn_4layers_results_Run22.pth

save_parameters_file : cnn_4layers_results_Run22

train_accuracy : 0.9399999999999998

test_val_loss : 0.0035088140144944185

test_accuracy : 0.9449999999999997
